// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 22sdoN4aX8y6Pu1pTjChkF
// Component: 2fIsiJagsVkuCk
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import PaheHeaderMenuTextDark from "../../PaheHeaderMenuTextDark"; // plasmic-import: otPdDgODX-n5De/component
import Price from "../../Price"; // plasmic-import: RwkehVoWyk84TR/component
import Select from "../../Select"; // plasmic-import: ZoAxdtPgmi7IU9/component
import Select__Option from "../../Select__Option"; // plasmic-import: FLSawYJ68YjHOS/component
import Button from "../../Button"; // plasmic-import: 5pNgdi1r2ZWc-/component
import ProductMian from "../../ProductMian"; // plasmic-import: SKEGE57ywhpzqy/component
import ShopingSection from "../../ShopingSection"; // plasmic-import: i0lYnyqtSwaOI9/component
import Instagram from "../../Instagram"; // plasmic-import: SXdIN0VA4a2nJu/component
import Footer from "../../Footer"; // plasmic-import: eZWnvjMgxXz0vo/component

import {
  UnnamedGlobalGroupOfVariantsValue,
  useUnnamedGlobalGroupOfVariants
} from "./PlasmicGlobalVariant__UnnamedGlobalGroupOfVariants"; // plasmic-import: 2ix5DLKYnXaUWp/globalVariant
import { useScreenVariants as useScreenVariants_0MRtZvbV1Afi8D } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: 0MRtZvbV1AFI8D/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_commerce_storefront.module.css"; // plasmic-import: 22sdoN4aX8y6Pu1pTjChkF/projectcss
import sty from "./PlasmicItem.module.css"; // plasmic-import: 2fIsiJagsVkuCk/css

import LikeIcon from "./icons/PlasmicIcon__Like"; // plasmic-import: V1O7ebakElak3b/icon
import MenuIcon from "./icons/PlasmicIcon__Menu"; // plasmic-import: bnHDD3jwDYmIDK/icon
import FullStarIcon from "./icons/PlasmicIcon__FullStar"; // plasmic-import: 7GnShiXH8Pyate/icon
import HalfStarIcon from "./icons/PlasmicIcon__HalfStar"; // plasmic-import: SH2PqLiOL45atW/icon
import EmptyStarIcon from "./icons/PlasmicIcon__EmptyStar"; // plasmic-import: ok1rgGDMnRa3OM/icon

export type PlasmicItem__VariantMembers = {};

export type PlasmicItem__VariantsArgs = {};
type VariantPropType = keyof PlasmicItem__VariantsArgs;
export const PlasmicItem__VariantProps = new Array<VariantPropType>();

export type PlasmicItem__ArgsType = {};
type ArgPropType = keyof PlasmicItem__ArgsType;
export const PlasmicItem__ArgProps = new Array<ArgPropType>();

export type PlasmicItem__OverridesType = {
  root?: p.Flex<"div">;
  paheHeaderMenuTextDark?: p.Flex<typeof PaheHeaderMenuTextDark>;
  h2?: p.Flex<"h2">;
  description?: p.Flex<"div">;
  quantity?: p.Flex<typeof Select>;
  likeButton?: p.Flex<typeof Button>;
  description4?: p.Flex<typeof Select>;
  description3?: p.Flex<typeof Select>;
  description2?: p.Flex<typeof Select>;
  shopingSection?: p.Flex<typeof ShopingSection>;
  instagram?: p.Flex<typeof Instagram>;
  footer?: p.Flex<typeof Footer>;
};

export interface DefaultItemProps {}

function PlasmicItem__RenderFunc(props: {
  variants: PlasmicItem__VariantsArgs;
  args: PlasmicItem__ArgsType;
  overrides: PlasmicItem__OverridesType;

  forNode?: string;
}) {
  const { variants, args, overrides, forNode } = props;
  const $props = props.args;

  const globalVariants = ensureGlobalVariants({
    unnamedGlobalGroupOfVariants: useUnnamedGlobalGroupOfVariants(),
    screen: useScreenVariants_0MRtZvbV1Afi8D()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{"Item"}</title>
        <meta key="og:title" property="og:title" content={"Item"} />
        <meta
          key="description"
          property="og:description"
          name="description"
          content={
            "Nunc parturient ultricies condimentum parturient sagittis urna mus conubia himenaeos fermentum leo mus dignissim pulvinar blandit porta eget ad."
          }
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root,
            {
              [sty.rootglobal_unnamedGlobalGroupOfVariants_unnamedVariant]:
                hasVariant(
                  globalVariants,
                  "unnamedGlobalGroupOfVariants",
                  "unnamedVariant"
                )
            }
          )}
        >
          <PaheHeaderMenuTextDark
            data-plasmic-name={"paheHeaderMenuTextDark"}
            data-plasmic-override={overrides.paheHeaderMenuTextDark}
            className={classNames(
              "__wab_instance",
              sty.paheHeaderMenuTextDark,
              {
                [sty.paheHeaderMenuTextDarkglobal_unnamedGlobalGroupOfVariants_unnamedVariant]:
                  hasVariant(
                    globalVariants,
                    "unnamedGlobalGroupOfVariants",
                    "unnamedVariant"
                  )
              }
            )}
          />

          <section className={classNames(projectcss.all, sty.section__acXiu)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__eIq)}
            >
              <div className={classNames(projectcss.all, sty.column__wks2I)}>
                <div className={classNames(projectcss.all, sty.columns__ziMcR)}>
                  <div
                    className={classNames(projectcss.all, sty.column__eeU2P)}
                  >
                    <h4
                      className={classNames(
                        projectcss.all,
                        projectcss.h4,
                        projectcss.__wab_text,
                        sty.h4___3XV3D,
                        {
                          [sty.h4global_unnamedGlobalGroupOfVariants_unnamedVariant___3XV3DC8KUj]:
                            hasVariant(
                              globalVariants,
                              "unnamedGlobalGroupOfVariants",
                              "unnamedVariant"
                            )
                        }
                      )}
                    >
                      {"Products"}
                    </h4>

                    {true ? (
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___106N
                        )}
                      >
                        {true ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__sNi8T
                            )}
                          >
                            {true ? (
                              <p.Stack
                                as={"div"}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox___1TUu1
                                )}
                              >
                                <h4
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.h4,
                                    projectcss.__wab_text,
                                    sty.h4__lvj7S
                                  )}
                                >
                                  {"Facial Products 3"}
                                </h4>

                                <h4
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.h4,
                                    projectcss.__wab_text,
                                    sty.h4__mCJt
                                  )}
                                >
                                  {"Hair Products 3"}
                                </h4>

                                <h4
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.h4,
                                    projectcss.__wab_text,
                                    sty.h4__lSLn
                                  )}
                                >
                                  {"Body Products 3"}
                                </h4>
                              </p.Stack>
                            ) : null}
                          </div>
                        ) : null}
                      </div>
                    ) : null}
                  </div>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.column__mRpHw)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__tOkfx)}
                      displayHeight={"100%" as const}
                      displayMaxHeight={"70px" as const}
                      displayMaxWidth={"70px" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"100%" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/commerce_storefront/images/xQfbKi4C9Gwrsr6GHairSet2Jpg.jpeg",
                        fullWidth: 2400,
                        fullHeight: 3000,
                        aspectRatio: undefined
                      }}
                    />

                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__cstTt)}
                      displayHeight={"100%" as const}
                      displayMaxHeight={"70px" as const}
                      displayMaxWidth={"70px" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"100%" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/commerce_storefront/images/hHlFjIwkwvEOemWyHairSet3Jpg.jpeg",
                        fullWidth: 2400,
                        fullHeight: 3600,
                        aspectRatio: undefined
                      }}
                    />

                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__etA0)}
                      displayHeight={"100%" as const}
                      displayMaxHeight={"70px" as const}
                      displayMaxWidth={"70px" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"100%" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/commerce_storefront/images/xQfbKi4C9Gwrsr6GHairSet2Jpg.jpeg",
                        fullWidth: 2400,
                        fullHeight: 3000,
                        aspectRatio: undefined
                      }}
                    />
                  </p.Stack>
                </div>
              </div>

              <div className={classNames(projectcss.all, sty.column__n1WD)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__iS2U2)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__ebVqt)}
                    displayHeight={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("320px /* plasmic-token: aNKCpOfwV38Rsi */" as const)
                        : ("auto" as const)
                    }
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("100%" as const)
                        : ("none" as const)
                    }
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("100%" as const)
                        : ("auto" as const)
                    }
                    src={{
                      src: "/plasmic/commerce_storefront/images/xQfbKi4C9Gwrsr6GHairSet2Jpg.jpeg",
                      fullWidth: 2400,
                      fullHeight: 3000,
                      aspectRatio: undefined
                    }}
                  />

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__yMapl)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__fL6Ff)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__y9Bt)}
                        displayHeight={
                          hasVariant(globalVariants, "screen", "mobileOnly")
                            ? ("320px /* plasmic-token: aNKCpOfwV38Rsi */" as const)
                            : ("auto" as const)
                        }
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={
                          hasVariant(globalVariants, "screen", "mobileOnly")
                            ? ("100%" as const)
                            : ("none" as const)
                        }
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={
                          hasVariant(globalVariants, "screen", "mobileOnly")
                            ? ("100%" as const)
                            : ("100%" as const)
                        }
                        src={{
                          src: "/plasmic/commerce_storefront/images/hHlFjIwkwvEOemWyHairSet3Jpg.jpeg",
                          fullWidth: 2400,
                          fullHeight: 3600,
                          aspectRatio: undefined
                        }}
                      />
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.freeBox__tvy55)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img___3Aijm)}
                        displayHeight={
                          hasVariant(globalVariants, "screen", "mobileOnly")
                            ? ("320px /* plasmic-token: aNKCpOfwV38Rsi */" as const)
                            : ("100%" as const)
                        }
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={
                          hasVariant(globalVariants, "screen", "mobileOnly")
                            ? ("100%" as const)
                            : ("none" as const)
                        }
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={
                          hasVariant(globalVariants, "screen", "mobileOnly")
                            ? ("100%" as const)
                            : ("100%" as const)
                        }
                        src={{
                          src: "/plasmic/commerce_storefront/images/e62Bac70E3F29684C06Bc36574C48D6Afc5629Ae5F08C2Afc54BfHairSetjpg.jpeg",
                          fullWidth: 2400,
                          fullHeight: 3400,
                          aspectRatio: undefined
                        }}
                      />
                    </div>
                  </p.Stack>
                </p.Stack>
              </div>

              <div
                className={classNames(projectcss.all, sty.column___7ROb7, {
                  [sty.columnglobal_unnamedGlobalGroupOfVariants_unnamedVariant___7ROb7C8KUj]:
                    hasVariant(
                      globalVariants,
                      "unnamedGlobalGroupOfVariants",
                      "unnamedVariant"
                    )
                })}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__nXvJn, {
                    [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant__nXvJnC8KUj]:
                      hasVariant(
                        globalVariants,
                        "unnamedGlobalGroupOfVariants",
                        "unnamedVariant"
                      )
                  })}
                >
                  <h2
                    data-plasmic-name={"h2"}
                    data-plasmic-override={overrides.h2}
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2
                    )}
                  >
                    {"Eternity NITRO Men's Running Shoes"}
                  </h2>

                  {true ? (
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__oveh)}
                    >
                      <Price cents={"99"} />

                      <Price
                        cents={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__t5N2S
                            )}
                          >
                            {"99"}
                          </div>
                        }
                        className={classNames(
                          "__wab_instance",
                          sty.price__xY7Mc
                        )}
                        dollars={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__ykRg7
                            )}
                          >
                            {"120"}
                          </div>
                        }
                      />
                    </p.Stack>
                  ) : null}

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__ptqMu)}
                  >
                    <div
                      data-plasmic-name={"description"}
                      data-plasmic-override={overrides.description}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.description
                      )}
                    >
                      {
                        "Let Eternity NITRO be your guide. The engineered mesh upper integrates the runGUIDE tech, designed to hug your midfoot for an effortless ride. For the midsole, NITRO foam provides superior cushioning, combining with other tech elements to give you support: a TPU heel piece for proprioception, reflectivity, and a durable rubber PUMAGRIP for all-surface traction. You lead the way, Eternity NITRO will keep you in line."
                      }
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__kqKVd)}
                  >
                    <h3
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        projectcss.__wab_text,
                        sty.h3__ylAUc
                      )}
                    >
                      {"Size"}
                    </h3>

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__deDn)}
                    >
                      <button
                        className={classNames(
                          projectcss.all,
                          projectcss.button,
                          projectcss.__wab_text,
                          sty.button__uoi2F
                        )}
                      >
                        {"Large"}
                      </button>

                      <button
                        className={classNames(
                          projectcss.all,
                          projectcss.button,
                          projectcss.__wab_text,
                          sty.button__xidE
                        )}
                      >
                        {"Medium"}
                      </button>

                      <button
                        className={classNames(
                          projectcss.all,
                          projectcss.button,
                          projectcss.__wab_text,
                          sty.button__w8Dw0
                        )}
                      >
                        {"Small"}
                      </button>
                    </p.Stack>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__kQhNw)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___9NGUp
                      )}
                    >
                      <h3
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3___7Sjq
                        )}
                      >
                        {"Quantity"}
                      </h3>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__n86R9
                        )}
                      >
                        <Select
                          data-plasmic-name={"quantity"}
                          data-plasmic-override={overrides.quantity}
                          defaultValue={"1" as const}
                          name={"" as const}
                          selectedContent2={""}
                        >
                          <Select__Option
                            className={classNames(
                              "__wab_instance",
                              sty.option__lytB1
                            )}
                            value={"1" as const}
                          >
                            {"1"}
                          </Select__Option>

                          <Select__Option
                            className={classNames(
                              "__wab_instance",
                              sty.option__haAgf
                            )}
                            value={"2" as const}
                          >
                            {"2"}
                          </Select__Option>

                          <Select__Option
                            className={classNames(
                              "__wab_instance",
                              sty.option__rro2L
                            )}
                            value={"3" as const}
                          >
                            {"3"}
                          </Select__Option>

                          <Select__Option
                            className={classNames(
                              "__wab_instance",
                              sty.option__f8Uu
                            )}
                            value={"4" as const}
                          >
                            {"4"}
                          </Select__Option>

                          <Select__Option
                            className={classNames(
                              "__wab_instance",
                              sty.option__oGZiB
                            )}
                            value={"5" as const}
                          >
                            {"5"}
                          </Select__Option>
                        </Select>

                        <Button
                          data-plasmic-name={"likeButton"}
                          data-plasmic-override={overrides.likeButton}
                          colors={"lightGrayOutline" as const}
                          iconOnly={true}
                          size={"large" as const}
                          startIcon={
                            <LikeIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__ydTrG
                              )}
                              role={"img"}
                            />
                          }
                        />

                        {true ? (
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__mrGy9
                            )}
                          >
                            <button
                              className={classNames(
                                projectcss.all,
                                projectcss.button,
                                projectcss.__wab_text,
                                sty.button___6GB
                              )}
                            >
                              {"Add to cart   |   $65"}
                            </button>
                          </p.Stack>
                        ) : null}
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__g1SCb)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__lag0G)}
                    >
                      <Select
                        data-plasmic-name={"description4"}
                        data-plasmic-override={overrides.description4}
                        className={classNames(
                          "__wab_instance",
                          sty.description4,
                          {
                            [sty.description4global_unnamedGlobalGroupOfVariants_unnamedVariant]:
                              hasVariant(
                                globalVariants,
                                "unnamedGlobalGroupOfVariants",
                                "unnamedVariant"
                              )
                          }
                        )}
                        defaultValue={"" as const}
                        name={"" as const}
                        placeholder={
                          <h6
                            className={classNames(
                              projectcss.all,
                              projectcss.h6,
                              projectcss.__wab_text,
                              sty.h6__re42Q
                            )}
                          >
                            {"Shipping and returns"}
                          </h6>
                        }
                      >
                        <Select__Option
                          className={classNames(
                            "__wab_instance",
                            sty.option__zWp9W
                          )}
                          value={"value1" as const}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___5JhPh
                            )}
                          >
                            {"Option 1"}
                          </div>
                        </Select__Option>

                        <Select__Option
                          className={classNames(
                            "__wab_instance",
                            sty.option__fGuZs
                          )}
                          value={"value2" as const}
                        >
                          {"Option 2"}
                        </Select__Option>
                      </Select>

                      <Select
                        data-plasmic-name={"description3"}
                        data-plasmic-override={overrides.description3}
                        className={classNames(
                          "__wab_instance",
                          sty.description3,
                          {
                            [sty.description3global_unnamedGlobalGroupOfVariants_unnamedVariant]:
                              hasVariant(
                                globalVariants,
                                "unnamedGlobalGroupOfVariants",
                                "unnamedVariant"
                              )
                          }
                        )}
                        defaultValue={"" as const}
                        name={"" as const}
                        placeholder={
                          <h6
                            className={classNames(
                              projectcss.all,
                              projectcss.h6,
                              projectcss.__wab_text,
                              sty.h6___44Ye5
                            )}
                          >
                            {"Details"}
                          </h6>
                        }
                      >
                        <Select__Option
                          className={classNames(
                            "__wab_instance",
                            sty.option__fI0Se
                          )}
                          value={"value1" as const}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__yvTpQ
                            )}
                          >
                            {"Option 1"}
                          </div>
                        </Select__Option>

                        <Select__Option
                          className={classNames(
                            "__wab_instance",
                            sty.option___7Ux7J
                          )}
                          value={"value2" as const}
                        >
                          {"Option 2"}
                        </Select__Option>
                      </Select>

                      {(
                        hasVariant(
                          globalVariants,
                          "unnamedGlobalGroupOfVariants",
                          "unnamedVariant"
                        )
                          ? true
                          : false
                      ) ? (
                        <Select
                          data-plasmic-name={"description2"}
                          data-plasmic-override={overrides.description2}
                          className={classNames(
                            "__wab_instance",
                            sty.description2,
                            {
                              [sty.description2global_unnamedGlobalGroupOfVariants_unnamedVariant]:
                                hasVariant(
                                  globalVariants,
                                  "unnamedGlobalGroupOfVariants",
                                  "unnamedVariant"
                                )
                            }
                          )}
                          defaultValue={"" as const}
                          name={"" as const}
                          placeholder={"Details"}
                        >
                          <Select__Option
                            className={classNames(
                              "__wab_instance",
                              sty.option___7U5RI
                            )}
                            value={"value1" as const}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__efM08
                              )}
                            >
                              {"Option 1"}
                            </div>
                          </Select__Option>

                          <Select__Option
                            className={classNames(
                              "__wab_instance",
                              sty.option___8CetG
                            )}
                            value={"value2" as const}
                          >
                            {"Option 2"}
                          </Select__Option>
                        </Select>
                      ) : null}
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
              </div>
            </p.Stack>
          </section>

          <p.Stack
            as={"section"}
            hasGap={true}
            className={classNames(projectcss.all, sty.section__scJ2L, {
              [sty.sectionglobal_unnamedGlobalGroupOfVariants_unnamedVariant__scJ2Lc8KUj]:
                hasVariant(
                  globalVariants,
                  "unnamedGlobalGroupOfVariants",
                  "unnamedVariant"
                )
            })}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__yxImk, {
                [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant__yxImkC8KUj]:
                  hasVariant(
                    globalVariants,
                    "unnamedGlobalGroupOfVariants",
                    "unnamedVariant"
                  )
              })}
            >
              <h3
                className={classNames(
                  projectcss.all,
                  projectcss.h3,
                  projectcss.__wab_text,
                  sty.h3__ynBYh,
                  {
                    [sty.h3global_unnamedGlobalGroupOfVariants_unnamedVariant__ynBYhC8KUj]:
                      hasVariant(
                        globalVariants,
                        "unnamedGlobalGroupOfVariants",
                        "unnamedVariant"
                      )
                  }
                )}
              >
                {"4.3 stars from 10 reviews"}
              </h3>
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__xyGsr)}
            >
              <div
                className={classNames(projectcss.all, sty.columns__hyyVd, {
                  [sty.columnsglobal_unnamedGlobalGroupOfVariants_unnamedVariant__hyyVdC8KUj]:
                    hasVariant(
                      globalVariants,
                      "unnamedGlobalGroupOfVariants",
                      "unnamedVariant"
                    )
                })}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__hhExp, {
                    [sty.columnglobal_unnamedGlobalGroupOfVariants_unnamedVariant__hhExpc8KUj]:
                      hasVariant(
                        globalVariants,
                        "unnamedGlobalGroupOfVariants",
                        "unnamedVariant"
                      )
                  })}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__gPbTm, {
                      [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant__gPbTmC8KUj]:
                        hasVariant(
                          globalVariants,
                          "unnamedGlobalGroupOfVariants",
                          "unnamedVariant"
                        )
                    })}
                  >
                    <FullStarIcon
                      className={classNames(projectcss.all, sty.svg__eqQu)}
                      role={"img"}
                    />

                    <FullStarIcon
                      className={classNames(projectcss.all, sty.svg__ulxlT)}
                      role={"img"}
                    />

                    <FullStarIcon
                      className={classNames(projectcss.all, sty.svg__mB3Nw)}
                      role={"img"}
                    />

                    <FullStarIcon
                      className={classNames(projectcss.all, sty.svg__lwlf)}
                      role={"img"}
                    />

                    <FullStarIcon
                      className={classNames(projectcss.all, sty.svg__koa2S)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__dFoVr,
                        {
                          [sty.textglobal_unnamedGlobalGroupOfVariants_unnamedVariant__dFoVrC8KUj]:
                            hasVariant(
                              globalVariants,
                              "unnamedGlobalGroupOfVariants",
                              "unnamedVariant"
                            )
                        }
                      )}
                    >
                      {hasVariant(
                        globalVariants,
                        "unnamedGlobalGroupOfVariants",
                        "unnamedVariant"
                      )
                        ? " 5/5"
                        : "5/5"}
                    </div>
                  </div>

                  <h4
                    className={classNames(
                      projectcss.all,
                      projectcss.h4,
                      projectcss.__wab_text,
                      sty.h4__cpGNf,
                      {
                        [sty.h4global_unnamedGlobalGroupOfVariants_unnamedVariant__cpGNfC8KUj]:
                          hasVariant(
                            globalVariants,
                            "unnamedGlobalGroupOfVariants",
                            "unnamedVariant"
                          )
                      }
                    )}
                  >
                    {"Perfect"}
                  </h4>

                  <h6
                    className={classNames(
                      projectcss.all,
                      projectcss.h6,
                      projectcss.__wab_text,
                      sty.h6__i2YG,
                      {
                        [sty.h6global_unnamedGlobalGroupOfVariants_unnamedVariant__i2YGc8KUj]:
                          hasVariant(
                            globalVariants,
                            "unnamedGlobalGroupOfVariants",
                            "unnamedVariant"
                          )
                      }
                    )}
                  >
                    {hasVariant(
                      globalVariants,
                      "unnamedGlobalGroupOfVariants",
                      "unnamedVariant"
                    )
                      ? "Great fit and feel. They elevate lounging to the next level!"
                      : "Great fit and feel. They elevate lounging to the next level!"}
                  </h6>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__kpFvD, {
                      [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant__kpFvDc8KUj]:
                        hasVariant(
                          globalVariants,
                          "unnamedGlobalGroupOfVariants",
                          "unnamedVariant"
                        )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__xl41X,
                        {
                          [sty.textglobal_unnamedGlobalGroupOfVariants_unnamedVariant__xl41XC8KUj]:
                            hasVariant(
                              globalVariants,
                              "unnamedGlobalGroupOfVariants",
                              "unnamedVariant"
                            )
                        }
                      )}
                    >
                      {hasVariant(
                        globalVariants,
                        "unnamedGlobalGroupOfVariants",
                        "unnamedVariant"
                      )
                        ? " 5/5"
                        : "Heidi C. | December, 2019"}
                    </div>
                  </div>

                  {(
                    hasVariant(
                      globalVariants,
                      "unnamedGlobalGroupOfVariants",
                      "unnamedVariant"
                    )
                      ? true
                      : false
                  ) ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox__lwTjw,
                        {
                          [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant__lwTjwc8KUj]:
                            hasVariant(
                              globalVariants,
                              "unnamedGlobalGroupOfVariants",
                              "unnamedVariant"
                            )
                        }
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__uZb3X,
                          {
                            [sty.textglobal_unnamedGlobalGroupOfVariants_unnamedVariant__uZb3Xc8KUj]:
                              hasVariant(
                                globalVariants,
                                "unnamedGlobalGroupOfVariants",
                                "unnamedVariant"
                              )
                          }
                        )}
                      >
                        {"Heidi C. | December, 2019"}
                      </div>
                    </div>
                  ) : null}
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__gd3Vh, {
                    [sty.columnglobal_unnamedGlobalGroupOfVariants_unnamedVariant__gd3VhC8KUj]:
                      hasVariant(
                        globalVariants,
                        "unnamedGlobalGroupOfVariants",
                        "unnamedVariant"
                      )
                  })}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox___4Kri4, {
                      [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant___4Kri4C8KUj]:
                        hasVariant(
                          globalVariants,
                          "unnamedGlobalGroupOfVariants",
                          "unnamedVariant"
                        )
                    })}
                  >
                    <FullStarIcon
                      className={classNames(projectcss.all, sty.svg__oeQui)}
                      role={"img"}
                    />

                    <FullStarIcon
                      className={classNames(projectcss.all, sty.svg__qL6VG)}
                      role={"img"}
                    />

                    <FullStarIcon
                      className={classNames(projectcss.all, sty.svg__sw7Hv)}
                      role={"img"}
                    />

                    <HalfStarIcon
                      className={classNames(projectcss.all, sty.svg__e8X9Q)}
                      role={"img"}
                    />

                    <EmptyStarIcon
                      className={classNames(projectcss.all, sty.svg___4JsKx)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__eqx8D,
                        {
                          [sty.textglobal_unnamedGlobalGroupOfVariants_unnamedVariant__eqx8Dc8KUj]:
                            hasVariant(
                              globalVariants,
                              "unnamedGlobalGroupOfVariants",
                              "unnamedVariant"
                            )
                        }
                      )}
                    >
                      {hasVariant(
                        globalVariants,
                        "unnamedGlobalGroupOfVariants",
                        "unnamedVariant"
                      )
                        ? " 5/5"
                        : "3.5/5"}
                    </div>
                  </div>

                  <h4
                    className={classNames(
                      projectcss.all,
                      projectcss.h4,
                      projectcss.__wab_text,
                      sty.h4__t9Bm,
                      {
                        [sty.h4global_unnamedGlobalGroupOfVariants_unnamedVariant__t9BmC8KUj]:
                          hasVariant(
                            globalVariants,
                            "unnamedGlobalGroupOfVariants",
                            "unnamedVariant"
                          )
                      }
                    )}
                  >
                    {"So comfortable!"}
                  </h4>

                  <h6
                    className={classNames(
                      projectcss.all,
                      projectcss.h6,
                      projectcss.__wab_text,
                      sty.h6__pCcRt,
                      {
                        [sty.h6global_unnamedGlobalGroupOfVariants_unnamedVariant__pCcRtC8KUj]:
                          hasVariant(
                            globalVariants,
                            "unnamedGlobalGroupOfVariants",
                            "unnamedVariant"
                          )
                      }
                    )}
                  >
                    {hasVariant(
                      globalVariants,
                      "unnamedGlobalGroupOfVariants",
                      "unnamedVariant"
                    )
                      ? "Great fit and feel. They elevate lounging to the next level!"
                      : "I sized up just in case and kind of wished I hadn’t. Very comfortable and I live in them exclusively during the weekend."}
                  </h6>

                  <div
                    className={classNames(projectcss.all, sty.freeBox___2LzQl, {
                      [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant___2LzQlC8KUj]:
                        hasVariant(
                          globalVariants,
                          "unnamedGlobalGroupOfVariants",
                          "unnamedVariant"
                        )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__vfBnZ,
                        {
                          [sty.textglobal_unnamedGlobalGroupOfVariants_unnamedVariant__vfBnZc8KUj]:
                            hasVariant(
                              globalVariants,
                              "unnamedGlobalGroupOfVariants",
                              "unnamedVariant"
                            )
                        }
                      )}
                    >
                      {hasVariant(
                        globalVariants,
                        "unnamedGlobalGroupOfVariants",
                        "unnamedVariant"
                      )
                        ? " 5/5"
                        : "Heidi C. | December, 2019"}
                    </div>
                  </div>

                  {(
                    hasVariant(
                      globalVariants,
                      "unnamedGlobalGroupOfVariants",
                      "unnamedVariant"
                    )
                      ? true
                      : false
                  ) ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___7QlaG,
                        {
                          [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant___7QlaGc8KUj]:
                            hasVariant(
                              globalVariants,
                              "unnamedGlobalGroupOfVariants",
                              "unnamedVariant"
                            )
                        }
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__diyuz,
                          {
                            [sty.textglobal_unnamedGlobalGroupOfVariants_unnamedVariant__diyuzC8KUj]:
                              hasVariant(
                                globalVariants,
                                "unnamedGlobalGroupOfVariants",
                                "unnamedVariant"
                              )
                          }
                        )}
                      >
                        {"Heidi C. | December, 2019"}
                      </div>
                    </div>
                  ) : null}
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__unEnZ, {
                    [sty.columnglobal_unnamedGlobalGroupOfVariants_unnamedVariant__unEnZc8KUj]:
                      hasVariant(
                        globalVariants,
                        "unnamedGlobalGroupOfVariants",
                        "unnamedVariant"
                      )
                  })}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__qCvDw, {
                      [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant__qCvDwC8KUj]:
                        hasVariant(
                          globalVariants,
                          "unnamedGlobalGroupOfVariants",
                          "unnamedVariant"
                        )
                    })}
                  >
                    <FullStarIcon
                      className={classNames(projectcss.all, sty.svg__e0CBq)}
                      role={"img"}
                    />

                    <FullStarIcon
                      className={classNames(projectcss.all, sty.svg__pDa0H)}
                      role={"img"}
                    />

                    <FullStarIcon
                      className={classNames(projectcss.all, sty.svg__lnm95)}
                      role={"img"}
                    />

                    <FullStarIcon
                      className={classNames(projectcss.all, sty.svg__yeEe6)}
                      role={"img"}
                    />

                    <EmptyStarIcon
                      className={classNames(projectcss.all, sty.svg__fPyGh)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__gsu4X,
                        {
                          [sty.textglobal_unnamedGlobalGroupOfVariants_unnamedVariant__gsu4XC8KUj]:
                            hasVariant(
                              globalVariants,
                              "unnamedGlobalGroupOfVariants",
                              "unnamedVariant"
                            )
                        }
                      )}
                    >
                      {hasVariant(
                        globalVariants,
                        "unnamedGlobalGroupOfVariants",
                        "unnamedVariant"
                      )
                        ? " 5/5"
                        : "4/5"}
                    </div>
                  </div>

                  <h4
                    className={classNames(
                      projectcss.all,
                      projectcss.h4,
                      projectcss.__wab_text,
                      sty.h4__uvQ2V,
                      {
                        [sty.h4global_unnamedGlobalGroupOfVariants_unnamedVariant__uvQ2VC8KUj]:
                          hasVariant(
                            globalVariants,
                            "unnamedGlobalGroupOfVariants",
                            "unnamedVariant"
                          )
                      }
                    )}
                  >
                    {"Comfy but thin"}
                  </h4>

                  <h6
                    className={classNames(
                      projectcss.all,
                      projectcss.h6,
                      projectcss.__wab_text,
                      sty.h6__lwYcp,
                      {
                        [sty.h6global_unnamedGlobalGroupOfVariants_unnamedVariant__lwYcpC8KUj]:
                          hasVariant(
                            globalVariants,
                            "unnamedGlobalGroupOfVariants",
                            "unnamedVariant"
                          )
                      }
                    )}
                  >
                    {hasVariant(
                      globalVariants,
                      "unnamedGlobalGroupOfVariants",
                      "unnamedVariant"
                    )
                      ? "Great fit and feel. They elevate lounging to the next level!"
                      : "Comfortable but kinda thin for a pant. I typically wear a 32/33 pant and had to size up to XL for these to not fit like a legging. Have been wearing pretty solid for a month of so and there's some pilling, but not a lot. Good price for OK product."}
                  </h6>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__zRihZ, {
                      [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant__zRihZc8KUj]:
                        hasVariant(
                          globalVariants,
                          "unnamedGlobalGroupOfVariants",
                          "unnamedVariant"
                        )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__xCnyX,
                        {
                          [sty.textglobal_unnamedGlobalGroupOfVariants_unnamedVariant__xCnyXc8KUj]:
                            hasVariant(
                              globalVariants,
                              "unnamedGlobalGroupOfVariants",
                              "unnamedVariant"
                            )
                        }
                      )}
                    >
                      {hasVariant(
                        globalVariants,
                        "unnamedGlobalGroupOfVariants",
                        "unnamedVariant"
                      )
                        ? " 5/5"
                        : "Heidi C. | December, 2019"}
                    </div>
                  </div>

                  {(
                    hasVariant(
                      globalVariants,
                      "unnamedGlobalGroupOfVariants",
                      "unnamedVariant"
                    )
                      ? true
                      : false
                  ) ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox__gBefg,
                        {
                          [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant__gBefgc8KUj]:
                            hasVariant(
                              globalVariants,
                              "unnamedGlobalGroupOfVariants",
                              "unnamedVariant"
                            )
                        }
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__yS4QA,
                          {
                            [sty.textglobal_unnamedGlobalGroupOfVariants_unnamedVariant__yS4QAc8KUj]:
                              hasVariant(
                                globalVariants,
                                "unnamedGlobalGroupOfVariants",
                                "unnamedVariant"
                              )
                          }
                        )}
                      >
                        {"Heidi C. | December, 2019"}
                      </div>
                    </div>
                  ) : null}
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__mzhGe, {
                    [sty.columnglobal_unnamedGlobalGroupOfVariants_unnamedVariant__mzhGeC8KUj]:
                      hasVariant(
                        globalVariants,
                        "unnamedGlobalGroupOfVariants",
                        "unnamedVariant"
                      )
                  })}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__wqVzB, {
                      [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant__wqVzBc8KUj]:
                        hasVariant(
                          globalVariants,
                          "unnamedGlobalGroupOfVariants",
                          "unnamedVariant"
                        )
                    })}
                  >
                    <FullStarIcon
                      className={classNames(projectcss.all, sty.svg___5Ys9P)}
                      role={"img"}
                    />

                    <FullStarIcon
                      className={classNames(projectcss.all, sty.svg__qsodt)}
                      role={"img"}
                    />

                    <FullStarIcon
                      className={classNames(projectcss.all, sty.svg__hy67Y)}
                      role={"img"}
                    />

                    <FullStarIcon
                      className={classNames(projectcss.all, sty.svg__sQHhg)}
                      role={"img"}
                    />

                    <FullStarIcon
                      className={classNames(projectcss.all, sty.svg__u9TA5)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__vqBk,
                        {
                          [sty.textglobal_unnamedGlobalGroupOfVariants_unnamedVariant__vqBkc8KUj]:
                            hasVariant(
                              globalVariants,
                              "unnamedGlobalGroupOfVariants",
                              "unnamedVariant"
                            )
                        }
                      )}
                    >
                      {hasVariant(
                        globalVariants,
                        "unnamedGlobalGroupOfVariants",
                        "unnamedVariant"
                      )
                        ? " 5/5"
                        : "5/5"}
                    </div>
                  </div>

                  <h4
                    className={classNames(
                      projectcss.all,
                      projectcss.h4,
                      projectcss.__wab_text,
                      sty.h4___2CC2,
                      {
                        [sty.h4global_unnamedGlobalGroupOfVariants_unnamedVariant___2CC2C8KUj]:
                          hasVariant(
                            globalVariants,
                            "unnamedGlobalGroupOfVariants",
                            "unnamedVariant"
                          )
                      }
                    )}
                  >
                    {"So comfortable!"}
                  </h4>

                  <h6
                    className={classNames(
                      projectcss.all,
                      projectcss.h6,
                      projectcss.__wab_text,
                      sty.h6__cGtrC,
                      {
                        [sty.h6global_unnamedGlobalGroupOfVariants_unnamedVariant__cGtrCc8KUj]:
                          hasVariant(
                            globalVariants,
                            "unnamedGlobalGroupOfVariants",
                            "unnamedVariant"
                          )
                      }
                    )}
                  >
                    {hasVariant(
                      globalVariants,
                      "unnamedGlobalGroupOfVariants",
                      "unnamedVariant"
                    )
                      ? "Great fit and feel. They elevate lounging to the next level!"
                      : "I sized up just in case and kind of wished I hadn’t. Very comfortable and I live in them exclusively during the weekend."}
                  </h6>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__a3Mvf, {
                      [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant__a3Mvfc8KUj]:
                        hasVariant(
                          globalVariants,
                          "unnamedGlobalGroupOfVariants",
                          "unnamedVariant"
                        )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___8UNtd,
                        {
                          [sty.textglobal_unnamedGlobalGroupOfVariants_unnamedVariant___8UNtdC8KUj]:
                            hasVariant(
                              globalVariants,
                              "unnamedGlobalGroupOfVariants",
                              "unnamedVariant"
                            )
                        }
                      )}
                    >
                      {hasVariant(
                        globalVariants,
                        "unnamedGlobalGroupOfVariants",
                        "unnamedVariant"
                      )
                        ? " 5/5"
                        : "Heidi C. | December, 2019"}
                    </div>
                  </div>

                  {(
                    hasVariant(
                      globalVariants,
                      "unnamedGlobalGroupOfVariants",
                      "unnamedVariant"
                    )
                      ? true
                      : false
                  ) ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__pg51, {
                        [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant__pg51C8KUj]:
                          hasVariant(
                            globalVariants,
                            "unnamedGlobalGroupOfVariants",
                            "unnamedVariant"
                          )
                      })}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__el1Nc,
                          {
                            [sty.textglobal_unnamedGlobalGroupOfVariants_unnamedVariant__el1NcC8KUj]:
                              hasVariant(
                                globalVariants,
                                "unnamedGlobalGroupOfVariants",
                                "unnamedVariant"
                              )
                          }
                        )}
                      >
                        {"Heidi C. | December, 2019"}
                      </div>
                    </div>
                  ) : null}
                </p.Stack>
              </div>
            </p.Stack>

            {(
              hasVariant(
                globalVariants,
                "unnamedGlobalGroupOfVariants",
                "unnamedVariant"
              )
                ? true
                : true
            ) ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___6DTrR, {
                  [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant___6DTrRc8KUj]:
                    hasVariant(
                      globalVariants,
                      "unnamedGlobalGroupOfVariants",
                      "unnamedVariant"
                    )
                })}
              >
                <p.PlasmicLink
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.link__vSJd0,
                    {
                      [sty.linkglobal_unnamedGlobalGroupOfVariants_unnamedVariant__vSJd0C8KUj]:
                        hasVariant(
                          globalVariants,
                          "unnamedGlobalGroupOfVariants",
                          "unnamedVariant"
                        )
                    }
                  )}
                  component={Link}
                  platform={"nextjs"}
                >
                  {"View all reviews"}
                </p.PlasmicLink>
              </p.Stack>
            ) : null}
            {(
              hasVariant(
                globalVariants,
                "unnamedGlobalGroupOfVariants",
                "unnamedVariant"
              )
                ? true
                : false
            ) ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__owicI, {
                  [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant__owicIc8KUj]:
                    hasVariant(
                      globalVariants,
                      "unnamedGlobalGroupOfVariants",
                      "unnamedVariant"
                    )
                })}
              >
                <p.PlasmicLink
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.link__usfSd,
                    {
                      [sty.linkglobal_unnamedGlobalGroupOfVariants_unnamedVariant__usfSdC8KUj]:
                        hasVariant(
                          globalVariants,
                          "unnamedGlobalGroupOfVariants",
                          "unnamedVariant"
                        )
                    }
                  )}
                  component={Link}
                  platform={"nextjs"}
                >
                  {"View all reviews"}
                </p.PlasmicLink>
              </p.Stack>
            ) : null}
          </p.Stack>

          <p.Stack
            as={"section"}
            hasGap={true}
            className={classNames(projectcss.all, sty.section__ajpQ4)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__uztG, {
                [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant__uztGC8KUj]:
                  hasVariant(
                    globalVariants,
                    "unnamedGlobalGroupOfVariants",
                    "unnamedVariant"
                  )
              })}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__zwy3D
                )}
              >
                {"Suggested products"}
              </div>

              <h3
                className={classNames(
                  projectcss.all,
                  projectcss.h3,
                  projectcss.__wab_text,
                  sty.h3__bEbn1
                )}
              >
                {"You may also like to check out these products."}
              </h3>
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__shLIm)}
            >
              <div className={classNames(projectcss.all, sty.column__jWLpy)}>
                <ProductMian
                  className={classNames(
                    "__wab_instance",
                    sty.productMian___7ExUn
                  )}
                  slot={
                    "A limited-edition, nourishing lip gel to top off your look and feel fantastic."
                  }
                  slot2={
                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__y6ZZr
                      )}
                    >
                      {"$24.00"}
                    </h5>
                  }
                  slot3={
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__cZG)}
                      displayHeight={
                        "320px /* plasmic-token: aNKCpOfwV38Rsi */" as const
                      }
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"100%" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/commerce_storefront/images/cdae2365Eff5A961Dd838B0505A1142B656Efdf95F08C2785B59ALipsjpg.jpeg",
                        fullWidth: 2400,
                        fullHeight: 3596,
                        aspectRatio: undefined
                      }}
                    />
                  }
                >
                  <h4
                    className={classNames(
                      projectcss.all,
                      projectcss.h4,
                      projectcss.__wab_text,
                      sty.h4__cqk5V
                    )}
                  >
                    {"Lip Fantastic"}
                  </h4>
                </ProductMian>
              </div>

              <div className={classNames(projectcss.all, sty.column__uMlzO)}>
                <ProductMian
                  className={classNames(
                    "__wab_instance",
                    sty.productMian__pPgq6
                  )}
                  slot={
                    "Treat your skin with active pore enzymes that replenish sun damaged skin."
                  }
                  slot2={
                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__nLyM3
                      )}
                    >
                      {"$ 18.88"}
                    </h5>
                  }
                  slot3={
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__s2N2F)}
                      displayHeight={
                        "320px /* plasmic-token: aNKCpOfwV38Rsi */" as const
                      }
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"100%" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/commerce_storefront/images/c3Cf1B72Aaa232Ba2Ab495Bd7485Efe29Cee138B5F08C2F945173Geljpg.jpeg",
                        fullWidth: 2400,
                        fullHeight: 3596,
                        aspectRatio: undefined
                      }}
                    />
                  }
                >
                  <h4
                    className={classNames(
                      projectcss.all,
                      projectcss.h4,
                      projectcss.__wab_text,
                      sty.h4___14Hmx
                    )}
                  >
                    {"Eye Purity Gels"}
                  </h4>
                </ProductMian>
              </div>

              <div className={classNames(projectcss.all, sty.column__ucwi)}>
                <ProductMian
                  className={classNames(
                    "__wab_instance",
                    sty.productMian___2OUfl
                  )}
                  slot={
                    "Anti-aging complexion cream for medium to dry skin. Nourish your face with a natural vitamin burst for that perfectly balanced glow."
                  }
                  slot2={
                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__rgJnD
                      )}
                    >
                      {"$ 32.88"}
                    </h5>
                  }
                  slot3={
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__ruamY)}
                      displayHeight={
                        "320px /* plasmic-token: aNKCpOfwV38Rsi */" as const
                      }
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"100%" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/commerce_storefront/images/bf9Cf6844F6Febb697Cbba7Dcbbc048Abc6C1Cea5F08C2E616A7CCreamjpg.jpeg",
                        fullWidth: 2400,
                        fullHeight: 3596,
                        aspectRatio: undefined
                      }}
                    />
                  }
                >
                  <h4
                    className={classNames(
                      projectcss.all,
                      projectcss.h4,
                      projectcss.__wab_text,
                      sty.h4___4Vue7
                    )}
                  >
                    {"Complexion Cream"}
                  </h4>
                </ProductMian>
              </div>

              <div className={classNames(projectcss.all, sty.column__ystYw)}>
                <ProductMian
                  className={classNames(
                    "__wab_instance",
                    sty.productMian__yfpfl
                  )}
                  slot={
                    "Made for your hair, a bath foam that brings your hair back to life."
                  }
                  slot2={
                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__nrqUk
                      )}
                    >
                      {"$ 25.88"}
                    </h5>
                  }
                  slot3={
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__tqUkp)}
                      displayHeight={
                        "320px /* plasmic-token: aNKCpOfwV38Rsi */" as const
                      }
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"100%" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/commerce_storefront/images/b115A9B1E7206E735653A4A9A38F429Ccca4186C5F08C293D7A5BHairBeautyjpg.jpeg",
                        fullWidth: 2400,
                        fullHeight: 3011,
                        aspectRatio: undefined
                      }}
                    />
                  }
                >
                  <h4
                    className={classNames(
                      projectcss.all,
                      projectcss.h4,
                      projectcss.__wab_text,
                      sty.h4__ozwL
                    )}
                  >
                    {"Hair Beauty Bath"}
                  </h4>
                </ProductMian>
              </div>
            </p.Stack>
          </p.Stack>

          <ShopingSection
            data-plasmic-name={"shopingSection"}
            data-plasmic-override={overrides.shopingSection}
            className={classNames("__wab_instance", sty.shopingSection)}
          />

          <Instagram
            data-plasmic-name={"instagram"}
            data-plasmic-override={overrides.instagram}
            className={classNames("__wab_instance", sty.instagram)}
          />

          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer, {
              [sty.footerglobal_unnamedGlobalGroupOfVariants_unnamedVariant]:
                hasVariant(
                  globalVariants,
                  "unnamedGlobalGroupOfVariants",
                  "unnamedVariant"
                )
            })}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "paheHeaderMenuTextDark",
    "h2",
    "description",
    "quantity",
    "likeButton",
    "description4",
    "description3",
    "description2",
    "shopingSection",
    "instagram",
    "footer"
  ],
  paheHeaderMenuTextDark: ["paheHeaderMenuTextDark"],
  h2: ["h2"],
  description: ["description"],
  quantity: ["quantity"],
  likeButton: ["likeButton"],
  description4: ["description4"],
  description3: ["description3"],
  description2: ["description2"],
  shopingSection: ["shopingSection"],
  instagram: ["instagram"],
  footer: ["footer"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  paheHeaderMenuTextDark: typeof PaheHeaderMenuTextDark;
  h2: "h2";
  description: "div";
  quantity: typeof Select;
  likeButton: typeof Button;
  description4: typeof Select;
  description3: typeof Select;
  description2: typeof Select;
  shopingSection: typeof ShopingSection;
  instagram: typeof Instagram;
  footer: typeof Footer;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicItem__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicItem__VariantsArgs;
    args?: PlasmicItem__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicItem__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicItem__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicItem__ArgProps,
      internalVariantPropNames: PlasmicItem__VariantProps
    });

    return PlasmicItem__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicItem";
  } else {
    func.displayName = `PlasmicItem.${nodeName}`;
  }
  return func;
}

export const PlasmicItem = Object.assign(
  // Top-level PlasmicItem renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    paheHeaderMenuTextDark: makeNodeComponent("paheHeaderMenuTextDark"),
    h2: makeNodeComponent("h2"),
    description: makeNodeComponent("description"),
    quantity: makeNodeComponent("quantity"),
    likeButton: makeNodeComponent("likeButton"),
    description4: makeNodeComponent("description4"),
    description3: makeNodeComponent("description3"),
    description2: makeNodeComponent("description2"),
    shopingSection: makeNodeComponent("shopingSection"),
    instagram: makeNodeComponent("instagram"),
    footer: makeNodeComponent("footer"),

    // Metadata about props expected for PlasmicItem
    internalVariantProps: PlasmicItem__VariantProps,
    internalArgProps: PlasmicItem__ArgProps
  }
);

export default PlasmicItem;
/* prettier-ignore-end */
