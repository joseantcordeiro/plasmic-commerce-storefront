// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 22sdoN4aX8y6Pu1pTjChkF
// Component: 4XQyBigQ7enoX
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import NavBar from "../../NavBar"; // plasmic-import: -mj8jmaQDFolXk/component
import Collection from "../../Collection"; // plasmic-import: QY_TxoSUUTJfDw/component
import ProductMian from "../../ProductMian"; // plasmic-import: SKEGE57ywhpzqy/component
import ShopingSection from "../../ShopingSection"; // plasmic-import: i0lYnyqtSwaOI9/component
import Instagram from "../../Instagram"; // plasmic-import: SXdIN0VA4a2nJu/component
import Footer from "../../Footer"; // plasmic-import: eZWnvjMgxXz0vo/component

import { useScreenVariants as useScreenVariants_0MRtZvbV1Afi8D } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: 0MRtZvbV1AFI8D/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_commerce_storefront.module.css"; // plasmic-import: 22sdoN4aX8y6Pu1pTjChkF/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: 4XQyBigQ7enoX/css

import RightArrowIcon from "./icons/PlasmicIcon__RightArrow"; // plasmic-import: DyijSpL5ETAPCK/icon

export type PlasmicHomepage__VariantMembers = {};

export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: p.Flex<"div">;
  heroSection?: p.Flex<"div">;
  navBar?: p.Flex<typeof NavBar>;
  container3?: p.Flex<"div">;
  h1?: p.Flex<"h1">;
  button?: p.Flex<"button">;
  h2?: p.Flex<"h2">;
  shopingSection?: p.Flex<typeof ShopingSection>;
  instagram?: p.Flex<typeof Instagram>;
  footer?: p.Flex<typeof Footer>;
};

export interface DefaultHomepageProps {}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;

  forNode?: string;
}) {
  const { variants, args, overrides, forNode } = props;
  const $props = props.args;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants_0MRtZvbV1Afi8D()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{"ShoeShop"}</title>
        <meta key="og:title" property="og:title" content={"ShoeShop"} />
        <meta
          key="description"
          property="og:description"
          name="description"
          content={
            "Ad ullamcorper eros nibh pharetra vulputate imperdiet consectetur vestibulum at ac posuere volutpat maecenas gravida dictum suscipit habitasse class scelerisque fermentum blandit mi a."
          }
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          {true ? (
            <div
              data-plasmic-name={"heroSection"}
              data-plasmic-override={overrides.heroSection}
              className={classNames(projectcss.all, sty.heroSection)}
            >
              <NavBar
                data-plasmic-name={"navBar"}
                data-plasmic-override={overrides.navBar}
                className={classNames("__wab_instance", sty.navBar)}
              />

              <section
                className={classNames(projectcss.all, sty.section__ue7M5)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"container3"}
                  data-plasmic-override={overrides.container3}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.container3)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___2BEap)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__enrsx)}
                    >
                      <h1
                        data-plasmic-name={"h1"}
                        data-plasmic-override={overrides.h1}
                        className={classNames(
                          projectcss.all,
                          projectcss.h1,
                          projectcss.__wab_text,
                          sty.h1
                        )}
                      >
                        {"The care you've always needed"}
                      </h1>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__rfza1
                        )}
                      >
                        {"A RANGE OF PRODUCTS FOR YOU"}
                      </div>

                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__ji8XB
                          )}
                        >
                          <button
                            data-plasmic-name={"button"}
                            data-plasmic-override={overrides.button}
                            className={classNames(
                              projectcss.all,
                              projectcss.button,
                              projectcss.__wab_text,
                              sty.button
                            )}
                          >
                            {"Shop Now"}
                          </button>
                        </div>
                      ) : null}
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
              </section>
            </div>
          ) : null}

          <section className={classNames(projectcss.all, sty.section__r3GuJ)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__u5HRm)}
            >
              <h3
                className={classNames(
                  projectcss.all,
                  projectcss.h3,
                  projectcss.__wab_text,
                  sty.h3__cIucD
                )}
              >
                {
                  "MOISTURE IS THE ESSENCE OF WETNESS, AND WETNESS IS THE ESSENCE OF BEAUTY."
                }
              </h3>

              {true ? (
                <p.Stack
                  as={p.PlasmicLink}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__eBm0K
                  )}
                  component={Link}
                  href={"/aboutus" as const}
                  platform={"nextjs"}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__nqrnb
                    )}
                  >
                    {"Find out more"}
                  </div>

                  <RightArrowIcon
                    className={classNames(projectcss.all, sty.svg__ez7Ij)}
                    role={"img"}
                  />
                </p.Stack>
              ) : null}
            </p.Stack>
          </section>

          <p.Stack
            as={"section"}
            hasGap={true}
            className={classNames(projectcss.all, sty.section___06Qlx)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__eCoN8)}
            >
              <h2
                data-plasmic-name={"h2"}
                data-plasmic-override={overrides.h2}
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2
                )}
              >
                {"Categories"}
              </h2>
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__c8Y9U)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__moDm7)}
              >
                <div className={classNames(projectcss.all, sty.column__ksKgl)}>
                  <Collection
                    className={classNames(
                      "__wab_instance",
                      sty.collection__xBtcL
                    )}
                    slot={
                      <h3
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3__jHqDl
                        )}
                      >
                        {"Facial Products"}
                      </h3>
                    }
                  >
                    {true ? (
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__f2YU
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__eccFl)}
                          displayHeight={
                            hasVariant(globalVariants, "screen", "mobileOnly")
                              ? ("320px /* plasmic-token: aNKCpOfwV38Rsi */" as const)
                              : ("100%" as const)
                          }
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"100%" as const}
                          loading={"lazy" as const}
                          src={{
                            src: "/plasmic/commerce_storefront/images/_1Png.png",
                            fullWidth: 800,
                            fullHeight: 1136,
                            aspectRatio: undefined
                          }}
                        />
                      </div>
                    ) : null}
                  </Collection>
                </div>

                <div className={classNames(projectcss.all, sty.column__lVcEt)}>
                  <Collection
                    className={classNames(
                      "__wab_instance",
                      sty.collection__eQhei
                    )}
                    slot={
                      <h3
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3__xfImZ
                        )}
                      >
                        {"Hair Products"}
                      </h3>
                    }
                  >
                    {true ? (
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__jgxDv
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__dtcOc)}
                          displayHeight={
                            hasVariant(globalVariants, "screen", "mobileOnly")
                              ? ("320px /* plasmic-token: aNKCpOfwV38Rsi */" as const)
                              : ("100%" as const)
                          }
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={
                            hasVariant(globalVariants, "screen", "mobileOnly")
                              ? ("100%" as const)
                              : ("100%" as const)
                          }
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={
                            hasVariant(globalVariants, "screen", "mobileOnly")
                              ? ("100%" as const)
                              : ("100%" as const)
                          }
                          loading={"lazy" as const}
                          src={{
                            src: "/plasmic/commerce_storefront/images/_2Png.png",
                            fullWidth: 800,
                            fullHeight: 1136,
                            aspectRatio: undefined
                          }}
                        />
                      </div>
                    ) : null}
                  </Collection>
                </div>

                <div className={classNames(projectcss.all, sty.column__t4JIp)}>
                  <Collection
                    className={classNames(
                      "__wab_instance",
                      sty.collection__s6NiQ
                    )}
                    slot={
                      <h3
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3__bnBn
                        )}
                      >
                        {"Body Products"}
                      </h3>
                    }
                  >
                    {true ? (
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__ta1Vh
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__ovsAr)}
                          displayHeight={
                            hasVariant(globalVariants, "screen", "mobileOnly")
                              ? ("320px /* plasmic-token: aNKCpOfwV38Rsi */" as const)
                              : ("100%" as const)
                          }
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={
                            hasVariant(globalVariants, "screen", "mobileOnly")
                              ? ("100%" as const)
                              : ("100%" as const)
                          }
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={
                            hasVariant(globalVariants, "screen", "mobileOnly")
                              ? ("100%" as const)
                              : ("100%" as const)
                          }
                          loading={"lazy" as const}
                          src={{
                            src: "/plasmic/commerce_storefront/images/_3Png.png",
                            fullWidth: 912,
                            fullHeight: 1140,
                            aspectRatio: undefined
                          }}
                        />
                      </div>
                    ) : null}
                  </Collection>
                </div>
              </p.Stack>
            </p.Stack>
          </p.Stack>

          <p.Stack
            as={"section"}
            hasGap={true}
            className={classNames(projectcss.all, sty.section__we7UC)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__pPC1)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__cJcSj
                )}
              >
                {"Introducing Our Latest Products"}
              </div>

              <h3
                className={classNames(
                  projectcss.all,
                  projectcss.h3,
                  projectcss.__wab_text,
                  sty.h3__tGoWg
                )}
              >
                {"Limited reservations on upcoming products and restocks."}
              </h3>

              {true ? (
                <p.Stack
                  as={p.PlasmicLink}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__daCSi
                  )}
                  component={Link}
                  href={"/item" as const}
                  platform={"nextjs"}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__oL4Mj
                    )}
                  >
                    {"See more product"}
                  </div>

                  <RightArrowIcon
                    className={classNames(projectcss.all, sty.svg___6U7Yp)}
                    role={"img"}
                  />
                </p.Stack>
              ) : null}
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__eHd74)}
            >
              <div className={classNames(projectcss.all, sty.column__i4IbA)}>
                <ProductMian
                  className={classNames(
                    "__wab_instance",
                    sty.productMian__brrIu
                  )}
                  slot={
                    "A limited-edition, nourishing lip gel to top off your look and feel fantastic."
                  }
                  slot2={
                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__msWbn
                      )}
                    >
                      {"$24.00"}
                    </h5>
                  }
                  slot3={
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img___1Hx3D)}
                      displayHeight={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? ("320px /* plasmic-token: aNKCpOfwV38Rsi */" as const)
                          : ("320px /* plasmic-token: aNKCpOfwV38Rsi */" as const)
                      }
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? ("100%" as const)
                          : ("100%" as const)
                      }
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? ("100%" as const)
                          : ("100%" as const)
                      }
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/commerce_storefront/images/cdae2365Eff5A961Dd838B0505A1142B656Efdf95F08C2785B59ALipsjpg.jpeg",
                        fullWidth: 2400,
                        fullHeight: 3596,
                        aspectRatio: undefined
                      }}
                    />
                  }
                >
                  <h4
                    className={classNames(
                      projectcss.all,
                      projectcss.h4,
                      projectcss.__wab_text,
                      sty.h4__wwVwp
                    )}
                  >
                    {"Lip Fantastic"}
                  </h4>
                </ProductMian>
              </div>

              <div className={classNames(projectcss.all, sty.column__qKb)}>
                <ProductMian
                  className={classNames(
                    "__wab_instance",
                    sty.productMian__vcyKw
                  )}
                  slot={
                    "Treat your skin with active pore enzymes that replenish sun damaged skin."
                  }
                  slot2={
                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__b9SvN
                      )}
                    >
                      {"$ 18.88"}
                    </h5>
                  }
                  slot3={
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img___9XBkR)}
                      displayHeight={
                        "320px /* plasmic-token: aNKCpOfwV38Rsi */" as const
                      }
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"100%" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/commerce_storefront/images/c3Cf1B72Aaa232Ba2Ab495Bd7485Efe29Cee138B5F08C2F945173Geljpg.jpeg",
                        fullWidth: 2400,
                        fullHeight: 3596,
                        aspectRatio: undefined
                      }}
                    />
                  }
                >
                  <h4
                    className={classNames(
                      projectcss.all,
                      projectcss.h4,
                      projectcss.__wab_text,
                      sty.h4___7NCs
                    )}
                  >
                    {"Eye Purity Gels"}
                  </h4>
                </ProductMian>
              </div>

              <div className={classNames(projectcss.all, sty.column__vq4D8)}>
                <ProductMian
                  className={classNames(
                    "__wab_instance",
                    sty.productMian__mBZsM
                  )}
                  slot={
                    "Anti-aging complexion cream for medium to dry skin. Nourish your face with a natural vitamin burst for that perfectly balanced glow."
                  }
                  slot2={
                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__yg7Rx
                      )}
                    >
                      {"$ 32.88"}
                    </h5>
                  }
                  slot3={
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__lAp7C)}
                      displayHeight={
                        "320px /* plasmic-token: aNKCpOfwV38Rsi */" as const
                      }
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"100%" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/commerce_storefront/images/bf9Cf6844F6Febb697Cbba7Dcbbc048Abc6C1Cea5F08C2E616A7CCreamjpg.jpeg",
                        fullWidth: 2400,
                        fullHeight: 3596,
                        aspectRatio: undefined
                      }}
                    />
                  }
                >
                  <h4
                    className={classNames(
                      projectcss.all,
                      projectcss.h4,
                      projectcss.__wab_text,
                      sty.h4__ys81S
                    )}
                  >
                    {"Complexion Cream"}
                  </h4>
                </ProductMian>
              </div>

              <div className={classNames(projectcss.all, sty.column__xuB7)}>
                <ProductMian
                  className={classNames(
                    "__wab_instance",
                    sty.productMian__rMVxC
                  )}
                  slot={
                    "Made for your hair, a bath foam that brings your hair back to life."
                  }
                  slot2={
                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__opxVd
                      )}
                    >
                      {"$ 25.88"}
                    </h5>
                  }
                  slot3={
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__loTzU)}
                      displayHeight={
                        "320px /* plasmic-token: aNKCpOfwV38Rsi */" as const
                      }
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"100%" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/commerce_storefront/images/b115A9B1E7206E735653A4A9A38F429Ccca4186C5F08C293D7A5BHairBeautyjpg.jpeg",
                        fullWidth: 2400,
                        fullHeight: 3011,
                        aspectRatio: undefined
                      }}
                    />
                  }
                >
                  <h4
                    className={classNames(
                      projectcss.all,
                      projectcss.h4,
                      projectcss.__wab_text,
                      sty.h4__lgs6R
                    )}
                  >
                    {"Hair Beauty Bath"}
                  </h4>
                </ProductMian>
              </div>
            </p.Stack>
          </p.Stack>

          <ShopingSection
            data-plasmic-name={"shopingSection"}
            data-plasmic-override={overrides.shopingSection}
            className={classNames("__wab_instance", sty.shopingSection)}
          />

          <Instagram
            data-plasmic-name={"instagram"}
            data-plasmic-override={overrides.instagram}
            className={classNames("__wab_instance", sty.instagram)}
          />

          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "heroSection",
    "navBar",
    "container3",
    "h1",
    "button",
    "h2",
    "shopingSection",
    "instagram",
    "footer"
  ],
  heroSection: ["heroSection", "navBar", "container3", "h1", "button"],
  navBar: ["navBar"],
  container3: ["container3", "h1", "button"],
  h1: ["h1"],
  button: ["button"],
  h2: ["h2"],
  shopingSection: ["shopingSection"],
  instagram: ["instagram"],
  footer: ["footer"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  heroSection: "div";
  navBar: typeof NavBar;
  container3: "div";
  h1: "h1";
  button: "button";
  h2: "h2";
  shopingSection: typeof ShopingSection;
  instagram: typeof Instagram;
  footer: typeof Footer;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicHomepage__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicHomepage__ArgProps,
      internalVariantPropNames: PlasmicHomepage__VariantProps
    });

    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    heroSection: makeNodeComponent("heroSection"),
    navBar: makeNodeComponent("navBar"),
    container3: makeNodeComponent("container3"),
    h1: makeNodeComponent("h1"),
    button: makeNodeComponent("button"),
    h2: makeNodeComponent("h2"),
    shopingSection: makeNodeComponent("shopingSection"),
    instagram: makeNodeComponent("instagram"),
    footer: makeNodeComponent("footer"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
